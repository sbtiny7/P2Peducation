jQuery.validator.addMethod("isPhone", function (value, element) {
  var length = value.length;
  var mobile = /^0*(13|15|14|18)\d{9}$/;
  var tel = /^\d{3,4}-\d{7,8}(-\d{3,4})?$/
  return this.optional(element) || (tel.test(value) || mobile.test(value));
}, "请正确填写您的联系电话");

jQuery.validator.addMethod("notEqual", function (value, element, param) {
  return this.optional(element) || value
  !param;
}, "Please specify a different (non-default) value");

jQuery.validator.addMethod("isMobileNumber", function (value, element) {
  var length = value.length;
  var mobile = /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/;
  var tele = /^\d{3,4}-?\d{7,9}$/
  return this.optional(element) || (length == 11 && mobile.test(value)) || tele.test(value);
}, "请填写正确的电话号码（固话含区号）");

jQuery.validator.addMethod("extension", function(value, element, param) {
        param = typeof param === "string" ? param.replace(/,/g, "|") : "png|jpe?g|gif";
        return this.optional(element) || value.match(new RegExp(".(" + param + ")$", "i"));
}, $.validator.format("Please enter a value with a valid extension."));



// Accept a value from a file input based on a required mimetype
$.validator.addMethod("accept", function(value, element, param) {
    // Split mime on commas in case we have multiple types we can accept
    var typeParam = typeof param === "string" ? param.replace(/\s/g, "").replace(/,/g, "|") : "image/*",
    optionalValue = this.optional(element),
    i, file;

    // Element is optional
    if (optionalValue) {
        return optionalValue;
    }

    if ($(element).attr("type") === "file") {
        // If we are using a wildcard, make it regex friendly
        typeParam = typeParam.replace(/\*/g, ".*");

    // Check if the element has a FileList before checking each file
    if (element.files && element.files.length) {
        for (i = 0; i < element.files.length; i++) {
            file = element.files[i];

            // Grab the mimetype from the loaded file, verify it matches
            if (!file.type.match(new RegExp( ".?(" + typeParam + ")$", "i"))) {
                return false;
            }
        }
    }
    }

    // Either return true because we've validated each file, or because the
    // browser does not support element.files and the FileList feature
    return true;
}, $.validator.format("Please enter a value with a valid mimetype."));

